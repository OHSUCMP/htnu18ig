{
  "resourceType": "Library",
  "id": "Pharma",
  "extension": [ {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
    "valueReference": {
      "reference": "Device/cqf-tooling"
    }
  } ],
  "url": "http://fhir.org/guides/ohsuhypertensionig/Library/Pharma",
  "version": "0.1",
  "name": "Pharma",
  "title": "Therapy - Medicines Logic",
  "description": "Decision logic for recommendations concerning hypertension medications",
  "relatedArtifact": [ {
    "type": "depends-on",
    "display": "FHIR model information",
    "resource": "http://fhir.org/guides/cqf/common/Library/FHIR-ModelInfo|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library FHIRHelpers",
    "resource": "http://fhir.org/guides/ohsuhypertensionig/Library/FHIRHelpers|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library Common",
    "resource": "http://fhir.org/guides/ohsuhypertensionig/Library/OHSUHTNCommon|0.1"
  }, {
    "type": "depends-on",
    "display": "Code system ConditionVerificationStatusCodes",
    "resource": "http://terminology.hl7.org/CodeSystem/condition-ver-status"
  }, {
    "type": "depends-on",
    "display": "Code system ConditionCategorySystem",
    "resource": "http://terminology.hl7.org/CodeSystem/condition-category"
  }, {
    "type": "depends-on",
    "display": "Code system Medication request status",
    "resource": "http://hl7.org/fhir/CodeSystem/medicationrequest-status"
  }, {
    "type": "depends-on",
    "display": "Value set Hypertension",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.104.12.1016"
  }, {
    "type": "depends-on",
    "display": "Value set Non essential Hypertension SNOMEDCT",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1032.10"
  }, {
    "type": "depends-on",
    "display": "Value set End Stage Renal Disease",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.2.590"
  }, {
    "type": "depends-on",
    "display": "Value set Pregnancy",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.3.378"
  }, {
    "type": "depends-on",
    "display": "Value set Systolic Blood Pressure",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1104.2"
  }, {
    "type": "depends-on",
    "display": "Value set Diastolic Blood Pressure",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.2.1045"
  }, {
    "type": "depends-on",
    "display": "Value set Blood Pressure Measured",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.600.2012"
  }, {
    "type": "depends-on",
    "display": "Value set Antihypertensive Medications 1",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1178.10"
  }, {
    "type": "depends-on",
    "display": "Value set Antihypertensive Medications 2",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1200.242"
  } ],
  "parameter": [ {
    "name": "Patient",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Patient"
  }, {
    "name": "Meets Inclusion Criteria",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Meets Exclusion Criteria",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "In Population",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Receive Therapy",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Enter Workflow",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Recommendation",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Rationale",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Suggestions",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Selection Behavior",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Links",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Rationale Combined Data",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Indicator Status",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Test Antihypertensive Medications",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  } ],
  "dataRequirement": [ {
    "type": "Patient",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Patient" ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "category", "code" ],
    "codeFilter": [ {
      "path": "category",
      "code": [ {
        "system": "http://terminology.hl7.org/CodeSystem/condition-category",
        "code": "problem-list-item",
        "display": "Problem List Item"
      } ]
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "category", "code" ],
    "codeFilter": [ {
      "path": "category",
      "code": [ {
        "system": "http://terminology.hl7.org/CodeSystem/condition-category",
        "code": "encounter-diagnosis",
        "display": "Encounter Diagnosis"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code" ]
  }, {
    "type": "Goal",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Goal" ],
    "mustSupport": [ "target" ]
  }, {
    "type": "MedicationRequest",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/MedicationRequest" ],
    "mustSupport": [ "status", "status.value", "id", "intent", "category", "subject", "authoredOn", "recorder", "dosageInstruction", "dispenseRequest" ]
  } ],
  "content": [ {
    "contentType": "text/cql",
    "data": "bGlicmFyeSBQaGFybWEgdmVyc2lvbiAnMC4xJwoKdXNpbmcgRkhJUiB2ZXJzaW9uICc0LjAuMScKCmluY2x1ZGUgRkhJUkhlbHBlcnMgdmVyc2lvbiAnNC4wLjEnIGNhbGxlZCBGSElSSGVscGVycwppbmNsdWRlIE9IU1VIVE5Db21tb24gdmVyc2lvbiAnMC4xJyBjYWxsZWQgQ29tbW9uCgpjb250ZXh0IFBhdGllbnQKCmRlZmluZSAiTWVldHMgSW5jbHVzaW9uIENyaXRlcmlhIjoKICBleGlzdHMgQ29tbW9uLiJDb25kaXRpb24gSW5kaWNhdGluZyBQcmVleGlzdGluZyBIeXBlcnRlbnNpb24iCgpkZWZpbmUgIk1lZXRzIEV4Y2x1c2lvbiBDcml0ZXJpYSI6CiAgQ29tbW9uLiJQYXRpZW50IFVuZGVyIEFnZSAxOCIKICAgIG9yIENvbW1vbi4iUGF0aWVudCBPdmVyIEFnZSA4MCIKICAgIG9yIGV4aXN0cyBDb21tb24uIkNvbmRpdGlvbiBJbmRpY2F0aW5nIEVuZCBTdGFnZSBSZW5hbCBEaXNlYXNlIgogICAgb3IgZXhpc3RzIENvbW1vbi4iQ29uZGl0aW9uIEluZGljYXRpbmcgUHJlZ25hbmN5IgogICAgb3IgQ29tbW9uLiJIVE4gQ3Jpc2lzIgoKZGVmaW5lICJJbiBQb3B1bGF0aW9uIjoKICAvLyBQcmVzZXJ2ZSB0aGlzIG9yZGVyaW5nIHNvIGV4Y2x1ZGVkIHBhdGllbnRzIGZhaWwgZmFzdAogIG5vdCAiTWVldHMgRXhjbHVzaW9uIENyaXRlcmlhIiBhbmQgIk1lZXRzIEluY2x1c2lvbiBDcml0ZXJpYSIKCi8vIFBoYXJtYSBUaGVyYXB5IHNob3VsZCBiZSByZWNlaXZlZCBpZiB0aGVyZSBhcmUgMTIgaG9tZSBCUHMgYW5kIGdvYWwgaGFzIG5vdCBiZWVuIGFjaGlldmVkCmRlZmluZSAiUmVjZWl2ZSBUaGVyYXB5IjoKICBDb21tb24uIkhhcyAxMiBIb21lIEJQcyIgYW5kIENvbW1vbi4iUGF0aWVudCBoYXMgYSBCUCBHb2FsIiBhbmQgQ29tbW9uLiJBYm92ZSBHb2FsIEF2ZXJhZ2UgTW9zdCBSZWNlbnQiCgovLyBUZXN0cyBjb25kaXRpb25zIGZyb20gb3RoZXIgd29ya2Zsb3dzIG5lZWRlZCBmb3IgUGhhcm1hIGludGVydmVudGlvbiB0byBwcm9jZWVkCmRlZmluZSAiRW50ZXIgV29ya2Zsb3ciOgogICAgIkluIFBvcHVsYXRpb24iIGFuZCAiUmVjZWl2ZSBUaGVyYXB5IgoKZGVmaW5lICJSZWNvbW1lbmRhdGlvbiI6CiAgJ0Jsb29kIFByZXNzdXJlIGlzIG5vdCBhdCBnb2FsJwoKZGVmaW5lICJSYXRpb25hbGUgQ29tYmluZWQgRGF0YSI6CiAgIlJhdGlvbmFsZSIgKyAnfCcgKyAiU3VnZ2VzdGlvbnMiICsgJ3wnICsgIlNlbGVjdGlvbiBCZWhhdmlvciIgKyAnfCcgKyAiTGlua3MiCgpkZWZpbmUgIlJhdGlvbmFsZSI6CiAgaWYgQ29tbW9uLiJQYXRpZW50IGlzIFVzaW5nIEFudGloeXBlcnRlbnNpdmUgTWVkaWNhdGlvbnMiIHRoZW4gJ1lvdXIgYmxvb2QgcHJlc3N1cmUgaXMgbm90IGF0IGdvYWwgZGVzcGl0ZSBjb250aW51b3VzIG1vbml0b3JpbmcuIFlvdSBtYXkgd2FudCB0byBjb25zaWRlciBzdGFydGluZyBvciBjaGFuZ2luZyBhbnRpaHlwZXJ0ZW5zaXZlIG1lZGljYXRpb24uIE90aGVyIGZhY3RvcnMgdGhhdCBjYW4gY29udHJpYnV0ZSB0byBCUCBub3QgYmVpbmcgYXQgZ29hbCBpbmNsdWRlIGV4Y2Vzc2l2ZSBzdHJlc3MsIG5ldyBvdmVyIHRoZSBjb3VudGVyIHJlbWVkaWVzLiBDb250YWN0IHlvdXIgY2FyZSB0ZWFtIHRvIGRpc2N1c3Mgb3B0aW9ucy4nCiAgZWxzZSAnWW91ciBibG9vZCBwcmVzc3VyZSBpcyBub3QgYXQgZ29hbCBkZXNwaXRlIGNvbnRpbnVvdXMgbW9uaXRvcmluZy4gWW91IG1heSB3YW50IHRvIGNvbnNpZGVyIHN0YXJ0aW5nIG9yIGNoYW5naW5nIGFudGloeXBlcnRlbnNpdmUgbWVkaWNhdGlvbi4gT3RoZXIgZmFjdG9ycyB0aGF0IGNhbiBjb250cmlidXRlIHRvIEJQIG5vdCBiZWluZyBhdCBnb2FsIGluY2x1ZGUgZXhjZXNzaXZlIHN0cmVzcywgbmV3IG92ZXIgdGhlIGNvdW50ZXIgcmVtZWRpZXMuIENvbnRhY3QgeW91ciBjYXJlIHRlYW0gdG8gZGlzY3VzcyBvcHRpb25zLicKCmRlZmluZSAiU3VnZ2VzdGlvbnMiOgogIGlmIENvbW1vbi4iUGF0aWVudCBpcyBVc2luZyBBbnRpaHlwZXJ0ZW5zaXZlIE1lZGljYXRpb25zIiB0aGVuICdbIHsgImlkIjogImNvbnRhY3Qtc3VnZ2VzdGlvbiIsICJsYWJlbCI6ICJDb250YWN0IGNhcmUgdGVhbSIsICJ0eXBlIjogInN1Z2dlc3Rpb24tbGluayIsICJhY3Rpb25zIjogW3sibGFiZWwiOiJDb250YWN0IHlvdXIgY2FyZSB0ZWFtIGFib3V0IG9wdGlvbnMgdG8gY29udHJvbCB5b3VyIGhpZ2ggYmxvb2QgcHJlc3N1cmUuIiwgInVybCI6Ii9jb250YWN0P3Rva2VuPXJlY29tbWVuZC1hZHZhbmNpbmctdHJlYXRtZW50In1dIH0gXScKICBlbHNlICdbIHsgImlkIjogImNvbnRhY3Qtc3VnZ2VzdGlvbiIsICJsYWJlbCI6ICJDb250YWN0IGNhcmUgdGVhbSIsICJ0eXBlIjogInN1Z2dlc3Rpb24tbGluayIsICJhY3Rpb25zIjogW3sibGFiZWwiOiJDb250YWN0IHlvdXIgY2FyZSB0ZWFtIGFib3V0IG9wdGlvbnMgdG8gY29udHJvbCB5b3VyIGhpZ2ggYmxvb2QgcHJlc3N1cmUuIiwgInVybCI6Ii9jb250YWN0P3Rva2VuPXJlY29tbWVuZC1waGFybWEifV0gfSBdJwoKZGVmaW5lICJJbmRpY2F0b3IgU3RhdHVzIjoKICAnd2FybmluZycKCmRlZmluZSAiU2VsZWN0aW9uIEJlaGF2aW9yIjoKICAnYXQtbW9zdC1vbmUnCgpkZWZpbmUgIkxpbmtzIjoKICAnJwoKZGVmaW5lICJUZXN0IEFudGloeXBlcnRlbnNpdmUgTWVkaWNhdGlvbnMiOgogIENvbW1vbi4iUGF0aWVudCBpcyBVc2luZyBBbnRpaHlwZXJ0ZW5zaXZlIE1lZGljYXRpb25zIgo="
  }, {
    "contentType": "application/elm+xml",
    "data": ""
  }, {
    "contentType": "application/elm+json",
    "data": ""
  } ]
}