{
  "resourceType": "Library",
  "id": "library-New-High-Blood-Pressure-Finding-HTN",
  "extension": [ {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
    "valueReference": {
      "reference": "cqf-tooling"
    }
  } ],
  "url": "http://fhir.org/guides/ohsu/htnu18ig/Library/library-New-High-Blood-Pressure-Finding-HTN",
  "version": "0.0.1",
  "name": "New-High-Blood-Pressure-Finding-HTN",
  "relatedArtifact": [ {
    "type": "depends-on",
    "resource": "http://hl7.org/fhir/Library/FHIR-ModelInfo|4.0.1"
  }, {
    "type": "depends-on",
    "resource": "http://hl7.org/fhir/Library/FHIRHelpers|4.0.1"
  }, {
    "type": "depends-on",
    "resource": "http://fhir.org/guides/ohsu/htnu18ig/Library/library-OHSUHTN-Common|0.1"
  }, {
    "type": "depends-on",
    "resource": "https://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1182.84"
  }, {
    "type": "depends-on",
    "resource": "https://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1138.419"
  }, {
    "type": "depends-on",
    "resource": "https://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1182.78"
  }, {
    "type": "depends-on",
    "resource": "https://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1047.513"
  }, {
    "type": "depends-on",
    "resource": "https://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1146.676"
  }, {
    "type": "depends-on",
    "resource": "https://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1032.10"
  }, {
    "type": "depends-on",
    "resource": "https://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.3.353"
  }, {
    "type": "depends-on",
    "resource": "https://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.600.1.1579"
  }, {
    "type": "depends-on",
    "resource": "https://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.3157.1004.20"
  } ],
  "parameter": [ {
    "name": "Measurement Period",
    "use": "in",
    "min": 0,
    "max": "1",
    "type": "Period"
  }, {
    "name": "Patient",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Patient"
  }, {
    "name": "generic_condition_valuesets",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "Systolic BP greater than 140",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Diastolic Blood Pressure Greater Than Equal To 90",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Age 18 to 85",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Systolic BP greater than or equal to 140",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Diastolic BP greater than 90",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Elevated Blood Pressure Reading",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Pregnant (SNOMED)",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Non essential Hypertension SNOMEDCT",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "End Stage Renal Disease",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Hospice Care",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Pregnant (SNOMED) Subpopulation",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Non essential Hypertension SNOMEDCT subpopulation",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Age under 18 subpopulation",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Age over 85 subpopulation",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Hospice Care subpopulation",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "End Stage Renal Disease subpopulation",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "elevated BP",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "MeetsInclusionCriteria",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "MeetsExclusionCriteria",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "InPopulation",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Pregnant Subpopulation",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Secondary hypertension subpopulation",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Out of age range subpopulation",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Had hospice subpopulation",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "End stage renal disease subpopulation",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Recommendation",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Rationale",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Errors",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Any"
  } ],
  "dataRequirement": [ {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "https://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.3157.1004.20"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "https://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.3157.1004.20"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "https://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1182.84"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "https://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1138.419"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "https://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1182.84"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "https://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1182.78"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "https://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1047.513"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "https://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1146.676"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "https://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1032.10"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "https://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.3.353"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "https://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.600.1.1579"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "https://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1146.676"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "https://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1032.10"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "https://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.3.353"
    } ]
  } ],
  "content": [ {
    "contentType": "text/cql",
    "data": "bGlicmFyeSAiTmV3LUhpZ2gtQmxvb2QtUHJlc3N1cmUtRmluZGluZy1IVE4iIHZlcnNpb24gJzAuMC4xJw0KDQp1c2luZyBGSElSIHZlcnNpb24gJzQuMC4xJw0KDQppbmNsdWRlICJGSElSSGVscGVycyIgdmVyc2lvbiAnNC4wLjEnIGNhbGxlZCBGSElSSGVscGVycw0KaW5jbHVkZSAiT0hTVUhUTl9Db21tb24iIHZlcnNpb24gJzAuMScgY2FsbGVkIENvbW1vbg0KDQp2YWx1ZXNldCAiU3lzdG9saWMgQmxvb2QgUHJlc3N1cmUgR3JlYXRlciBUaGFuIEVxdWFsIFRvIDE0MCBWUyI6ICdodHRwczovL2N0cy5ubG0ubmloLmdvdi9maGlyL1ZhbHVlU2V0LzIuMTYuODQwLjEuMTEzNzYyLjEuNC4xMTgyLjg0Jw0KdmFsdWVzZXQgIkRpYXN0b2xpYyBCbG9vZCBQcmVzc3VyZSBHcmVhdGVyIFRoYW4gRXF1YWwgVG8gOTAgVlMiOiAnaHR0cHM6Ly9jdHMubmxtLm5paC5nb3YvZmhpci9WYWx1ZVNldC8yLjE2Ljg0MC4xLjExMzc2Mi4xLjQuMTEzOC40MTknDQp2YWx1ZXNldCAiRGlhc3RvbGljIEJsb29kIFByZXNzdXJlIEdyZWF0ZXIgVGhhbiBFcXVhbCBUbyA5MCBWU18xIjogJ2h0dHBzOi8vY3RzLm5sbS5uaWguZ292L2ZoaXIvVmFsdWVTZXQvMi4xNi44NDAuMS4xMTM3NjIuMS40LjExODIuNzgnDQp2YWx1ZXNldCAiRWxldmF0ZWQgQmxvb2QgUHJlc3N1cmUgUmVhZGluZyBWUyI6ICdodHRwczovL2N0cy5ubG0ubmloLmdvdi9maGlyL1ZhbHVlU2V0LzIuMTYuODQwLjEuMTEzNzYyLjEuNC4xMDQ3LjUxMycNCnZhbHVlc2V0ICJQcmVnbmFudCAoU05PTUVEKSBWUyI6ICdodHRwczovL2N0cy5ubG0ubmloLmdvdi9maGlyL1ZhbHVlU2V0LzIuMTYuODQwLjEuMTEzNzYyLjEuNC4xMTQ2LjY3NicNCnZhbHVlc2V0ICJOb24gZXNzZW50aWFsIEh5cGVydGVuc2lvbiBTTk9NRURDVCBWUyI6ICdodHRwczovL2N0cy5ubG0ubmloLmdvdi9maGlyL1ZhbHVlU2V0LzIuMTYuODQwLjEuMTEzNzYyLjEuNC4xMDMyLjEwJw0KdmFsdWVzZXQgIkVuZCBTdGFnZSBSZW5hbCBEaXNlYXNlIFZTIjogJ2h0dHBzOi8vY3RzLm5sbS5uaWguZ292L2ZoaXIvVmFsdWVTZXQvMi4xNi44NDAuMS4xMTM4ODMuMy41MjYuMy4zNTMnDQp2YWx1ZXNldCAiUGFsbGlhdGl2ZSBvciBIb3NwaWNlIENhcmUgVlMiOiAnaHR0cHM6Ly9jdHMubmxtLm5paC5nb3YvZmhpci9WYWx1ZVNldC8yLjE2Ljg0MC4xLjExMzg4My4zLjYwMC4xLjE1NzknDQp2YWx1ZXNldCAiSG9zcGljZSBDYXJlIFZTIjogJ2h0dHBzOi8vY3RzLm5sbS5uaWguZ292L2ZoaXIvVmFsdWVTZXQvMi4xNi44NDAuMS4xMTM4ODMuMy4zMTU3LjEwMDQuMjAnDQoNCnBhcmFtZXRlciAiTWVhc3VyZW1lbnQgUGVyaW9kIiBkZWZhdWx0IEludGVydmFsW0AyMDE5LTAxLTAxVDAwOjAwOjAwLEAyMDIxLTAxLTAxVDAwOjAwOjAwXQ0KY29udGV4dCBQYXRpZW50DQoNCmRlZmluZSAiZ2VuZXJpY19jb25kaXRpb25fdmFsdWVzZXRzIjoNCiAgW0NvbmRpdGlvbjogIkhvc3BpY2UgQ2FyZSBWUyJdDQogIHVuaW9uIFtDb25kaXRpb246ICJIb3NwaWNlIENhcmUgVlMiXQ0KDQpkZWZpbmUgIlN5c3RvbGljIEJQIGdyZWF0ZXIgdGhhbiAxNDAiOg0KICBXaXRoVW5pdChbT2JzZXJ2YXRpb246ICJTeXN0b2xpYyBCbG9vZCBQcmVzc3VyZSBHcmVhdGVyIFRoYW4gRXF1YWwgVG8gMTQwIFZTIl0sICAnbW1bSGddJykNCg0KZGVmaW5lICJEaWFzdG9saWMgQmxvb2QgUHJlc3N1cmUgR3JlYXRlciBUaGFuIEVxdWFsIFRvIDkwIjoNCiAgW09ic2VydmF0aW9uOiAiRGlhc3RvbGljIEJsb29kIFByZXNzdXJlIEdyZWF0ZXIgVGhhbiBFcXVhbCBUbyA5MCBWUyJdDQoNCmRlZmluZSAiQWdlIDE4IHRvIDg1IjoNCiAgQWdlSW5ZZWFycygpID49IDE4IGFuZCBBZ2VJblllYXJzKCkgPD0gODUNCg0KZGVmaW5lICJTeXN0b2xpYyBCUCBncmVhdGVyIHRoYW4gb3IgZXF1YWwgdG8gMTQwIjoNCiAgZXhpc3RzKFdpdGhVbml0KFtPYnNlcnZhdGlvbjogIlN5c3RvbGljIEJsb29kIFByZXNzdXJlIEdyZWF0ZXIgVGhhbiBFcXVhbCBUbyAxNDAgVlMiXSwgICdtbVtIZ10nKSkNCg0KZGVmaW5lICJEaWFzdG9saWMgQlAgZ3JlYXRlciB0aGFuIDkwIjoNCiAgZXhpc3RzKFdpdGhVbml0KFtPYnNlcnZhdGlvbjogIkRpYXN0b2xpYyBCbG9vZCBQcmVzc3VyZSBHcmVhdGVyIFRoYW4gRXF1YWwgVG8gOTAgVlNfMSJdLCAgJ21tW0hnXScpKQ0KDQpkZWZpbmUgIkVsZXZhdGVkIEJsb29kIFByZXNzdXJlIFJlYWRpbmciOg0KICBleGlzdHMoW0VuY291bnRlcjogIkVsZXZhdGVkIEJsb29kIFByZXNzdXJlIFJlYWRpbmcgVlMiXSkNCg0KZGVmaW5lICJQcmVnbmFudCAoU05PTUVEKSI6DQogIGV4aXN0cyhBY3RpdmVPclJlY3VycmluZyhbQ29uZGl0aW9uOiAiUHJlZ25hbnQgKFNOT01FRCkgVlMiXSkpDQoNCmRlZmluZSAiTm9uIGVzc2VudGlhbCBIeXBlcnRlbnNpb24gU05PTUVEQ1QiOg0KICBleGlzdHMoQWN0aXZlQ29uZGl0aW9uKFtDb25kaXRpb246ICJOb24gZXNzZW50aWFsIEh5cGVydGVuc2lvbiBTTk9NRURDVCBWUyJdKSkNCg0KZGVmaW5lICJFbmQgU3RhZ2UgUmVuYWwgRGlzZWFzZSI6DQogIGV4aXN0cyhDb25maXJtZWQoW0NvbmRpdGlvbjogIkVuZCBTdGFnZSBSZW5hbCBEaXNlYXNlIFZTIl0pKQ0KDQpkZWZpbmUgIkhvc3BpY2UgQ2FyZSI6DQogIGV4aXN0cyhDb25maXJtZWQoW0NvbmRpdGlvbjogIlBhbGxpYXRpdmUgb3IgSG9zcGljZSBDYXJlIFZTIl0pKQ0KDQpkZWZpbmUgIlByZWduYW50IChTTk9NRUQpIFN1YnBvcHVsYXRpb24iOg0KICBleGlzdHMoQ29uZmlybWVkKEFjdGl2ZUNvbmRpdGlvbihbQ29uZGl0aW9uOiAiUHJlZ25hbnQgKFNOT01FRCkgVlMiXSkpKQ0KDQpkZWZpbmUgIk5vbiBlc3NlbnRpYWwgSHlwZXJ0ZW5zaW9uIFNOT01FRENUIHN1YnBvcHVsYXRpb24iOg0KICBleGlzdHMoQ29uZmlybWVkKFtDb25kaXRpb246ICJOb24gZXNzZW50aWFsIEh5cGVydGVuc2lvbiBTTk9NRURDVCBWUyJdKSkNCg0KZGVmaW5lICJBZ2UgdW5kZXIgMTggc3VicG9wdWxhdGlvbiI6DQogIEFnZUluWWVhcnMoKSA8PSAxOA0KDQpkZWZpbmUgIkFnZSBvdmVyIDg1IHN1YnBvcHVsYXRpb24iOg0KICBBZ2VJblllYXJzKCkgPj0gODUNCg0KZGVmaW5lICJIb3NwaWNlIENhcmUgc3VicG9wdWxhdGlvbiI6DQogIGV4aXN0cyhDb25maXJtZWQoImdlbmVyaWNfY29uZGl0aW9uX3ZhbHVlc2V0cyIpKQ0KDQpkZWZpbmUgIkVuZCBTdGFnZSBSZW5hbCBEaXNlYXNlIHN1YnBvcHVsYXRpb24iOg0KICBleGlzdHMoQ29uZmlybWVkKFtDb25kaXRpb246ICJFbmQgU3RhZ2UgUmVuYWwgRGlzZWFzZSBWUyJdKSkNCg0KZGVmaW5lICJNZWV0c0luY2x1c2lvbkNyaXRlcmlhIjoNCiAgIkFnZSAxOCB0byA4NSINCiAgYW5kICJlbGV2YXRlZCBCUCINCg0KZGVmaW5lICJlbGV2YXRlZCBCUCI6DQogICJTeXN0b2xpYyBCUCBncmVhdGVyIHRoYW4gb3IgZXF1YWwgdG8gMTQwIg0KICBvciAiRGlhc3RvbGljIEJQIGdyZWF0ZXIgdGhhbiA5MCINCiAgb3IgIkVsZXZhdGVkIEJsb29kIFByZXNzdXJlIFJlYWRpbmciDQoNCmRlZmluZSAiTWVldHNFeGNsdXNpb25Dcml0ZXJpYSI6DQogICJQcmVnbmFudCAoU05PTUVEKSINCiAgb3IgIk5vbiBlc3NlbnRpYWwgSHlwZXJ0ZW5zaW9uIFNOT01FRENUIg0KICBvciAiRW5kIFN0YWdlIFJlbmFsIERpc2Vhc2UiDQogIG9yICJIb3NwaWNlIENhcmUiDQoNCmRlZmluZSAiUHJlZ25hbnQgU3VicG9wdWxhdGlvbiI6DQogIGlmICJJblBvcHVsYXRpb24iIGlzIG5vdCB0cnVlIHRoZW4NCiAgICBudWxsDQogIGVsc2UNCiAgIlByZWduYW50IChTTk9NRUQpIFN1YnBvcHVsYXRpb24iDQoNCmRlZmluZSAiU2Vjb25kYXJ5IGh5cGVydGVuc2lvbiBzdWJwb3B1bGF0aW9uIjoNCiAgaWYgIkluUG9wdWxhdGlvbiIgaXMgbm90IHRydWUgdGhlbg0KICAgIG51bGwNCiAgZWxzZQ0KICAiTm9uIGVzc2VudGlhbCBIeXBlcnRlbnNpb24gU05PTUVEQ1Qgc3VicG9wdWxhdGlvbiINCg0KZGVmaW5lICJPdXQgb2YgYWdlIHJhbmdlIHN1YnBvcHVsYXRpb24iOg0KICAiQWdlIHVuZGVyIDE4IHN1YnBvcHVsYXRpb24iDQogIG9yICJBZ2Ugb3ZlciA4NSBzdWJwb3B1bGF0aW9uIg0KDQpkZWZpbmUgIkhhZCBob3NwaWNlIHN1YnBvcHVsYXRpb24iOg0KICAiSG9zcGljZSBDYXJlIHN1YnBvcHVsYXRpb24iDQoNCmRlZmluZSAiRW5kIHN0YWdlIHJlbmFsIGRpc2Vhc2Ugc3VicG9wdWxhdGlvbiI6DQogIGlmICJJblBvcHVsYXRpb24iIGlzIG5vdCB0cnVlIHRoZW4NCiAgICBudWxsDQogIGVsc2UNCiAgIkVuZCBTdGFnZSBSZW5hbCBEaXNlYXNlIHN1YnBvcHVsYXRpb24iDQoNCmRlZmluZSAiSW5Qb3B1bGF0aW9uIjoNCiAgIk1lZXRzSW5jbHVzaW9uQ3JpdGVyaWEiIGFuZCBub3QgIk1lZXRzRXhjbHVzaW9uQ3JpdGVyaWEiDQoNCmRlZmluZSAiUmVjb21tZW5kYXRpb24iOg0KICBpZiAiTWVldHNFeGNsdXNpb25Dcml0ZXJpYSIgdGhlbiAnUGF0aWVudCBtZWV0cyB0aGUgZXhjbHVzaW9uIGNyaXRlcmlhLCBzbyBzdGFuZGFyZCBoaWdoIGJsb29kIHByZXNzdXJlIChoeXBlcnRlbnNpb24pIGd1aWRlbGluZXMgd2lsbCBub3QgYXBwbHkuJw0KICBlbHNlIGlmICJQcmVnbmFudCBTdWJwb3B1bGF0aW9uIiB0aGVuICdGb2xsb3cgdXAgd2l0aCB5b3VyIE9CLUd5biBhbmQgb3IgRmFtaWx5IFByYWN0aXRpb25lciByZWdhcmRpbmcgeW91ciBoaWdoYmxvb2QgcHJlc3N1cmUgcmVhZGluZyB0b2RheS4gICcNCiAgZWxzZSBpZiAiU2Vjb25kYXJ5IGh5cGVydGVuc2lvbiBzdWJwb3B1bGF0aW9uIiB0aGVuICdZb3UgaGF2ZSBhIGtub3duIGNhdXNlIG9mIGhpZ2ggYmxvb2QgcHJlc3N1cmUgKGh5cGVydGVuc2lvbikgYW5kIGhhZCBhIGhpZ2ggYmxvb2QgcHJlc3N1cmUgcmVhZGluZyB0b2RheS4gIFBsZWFzZSBzZWUgeW91ciBzcGVjaWFsaXN0IHJlZ2FyZGluZyB0aGUgaGlnaCByZWFkaW5nIHRvZGF5LiAnDQogIGVsc2UgaWYgIkVuZCBzdGFnZSByZW5hbCBkaXNlYXNlIHN1YnBvcHVsYXRpb24iIHRoZW4gJ1lvdSBoYXZlIGtpZG5leSBkYW1hZ2UgYW5kIGhhZCBhIGhpZ2ggYmxvb2QgcHJlc3N1cmUgcmVhZGluZyB0b2RheS4gIFBsZWFzZSBmb2xsb3ctdXAgd2l0aCB5b3VyIG5lcGhyb2xvZ2lzdC4gJw0KICBlbHNlIG51bGwNCg0KDQpkZWZpbmUgIlJhdGlvbmFsZSI6DQogIGlmICJNZWV0c0V4Y2x1c2lvbkNyaXRlcmlhIiB0aGVuIG51bGwNCiAgZWxzZSBpZiAiUHJlZ25hbnQgU3VicG9wdWxhdGlvbiIgdGhlbiAnVW5jb250cm9sbGVkIGJsb29kIHByZXNzdXJlIGR1cmluZyBwcmVnbmFuY3kgY2FuIGxlYWQgdG8gcHJlZWNsYW1wc2lhIG9yIGV2ZW4gc2VpenVyZXMuICBVc3VhbGx5IGhpZ2ggYmxvb2QgcHJlc3N1cmUgb2NjdXJzIGluIHdvbWVuIHdpdGggdXN1YWxseSBub3JtYWwgYmxvb2QgcHJlc3N1cmUgcm91Z2hseSBhcm91bmQgMjAgd2Vla3MgcHJlZ25hbnQuICcNCiAgZWxzZSBpZiAiU2Vjb25kYXJ5IGh5cGVydGVuc2lvbiBzdWJwb3B1bGF0aW9uIiB0aGVuICdZb3VyIGhpZ2ggYmxvb2QgcHJlc3N1cmUgKGh5cGVydGVuc2lvbikgaGFzIGEga25vd24gY2F1c2UgYW5kIHJlcXVpcmVzIHNwZWNpZmljIHRoZXJhcHkgb3V0c2lkZSB0aGUgbm9ybWFsIHNjb3BlIG9mIHRoZSBoeXBlcnRlbnNpb24gZ3VpZGVsaW5lcy4nDQogIGVsc2UgaWYgIkVuZCBzdGFnZSByZW5hbCBkaXNlYXNlIHN1YnBvcHVsYXRpb24iIHRoZW4gJ1dpdGggeW91ciBraWRuZXkgZGFtYWdlIHlvdSBhcmUgb3V0c2lkZSBvZiB0aGUgbm9ybWFsIGhpZ2ggYmxvb2QgcHJlc3N1cmUgKGh5cGVydGVuc2lvbikgZ3VpZGVsaW5lcy4gJw0KICBlbHNlIG51bGwNCg0KZGVmaW5lICJFcnJvcnMiOg0KICBudWxsDQoNCg0KZGVmaW5lIGZ1bmN0aW9uIFdpdGhVbml0KE9ic0xpc3QgTGlzdDxPYnNlcnZhdGlvbj4sIFVuaXQgU3RyaW5nKToNCiAgT2JzTGlzdCBPDQogICAgd2hlcmUgKE8udmFsdWUgYXMgRkhJUi5RdWFudGl0eSkudW5pdC52YWx1ZSA9IFVuaXQgb3IgKE8udmFsdWUgYXMgRkhJUi5RdWFudGl0eSkuY29kZS52YWx1ZSA9IFVuaXQNCg0KZGVmaW5lIGZ1bmN0aW9uIENvbmZpcm1lZChDb25kTGlzdCBMaXN0PENvbmRpdGlvbj4pOg0KICBDb25kTGlzdCBDIHdoZXJlIEZISVJIZWxwZXJzLlRvQ29uY2VwdChDLnZlcmlmaWNhdGlvblN0YXR1cykgPSBDb21tb24uImNvbmZpcm1lZCINCg0KZGVmaW5lIGZ1bmN0aW9uIEFjdGl2ZUNvbmRpdGlvbihDb25kTGlzdCBMaXN0PENvbmRpdGlvbj4pOg0KICBDb25kTGlzdCBDDQogICAgd2hlcmUgRkhJUkhlbHBlcnMuVG9Db25jZXB0KEMuY2xpbmljYWxTdGF0dXMpID0gQ29tbW9uLiJhY3RpdmUiDQogICAgICBhbmQgKA0KICAgICAgICBDLmFiYXRlbWVudCBpcyBudWxsDQogICAgICApDQoNCmRlZmluZSBmdW5jdGlvbiBBY3RpdmVPclJlY3VycmluZyhDb25kTGlzdCBMaXN0PENvbmRpdGlvbj4pOg0KICBDb25kTGlzdCBDIHdoZXJlIEZISVJIZWxwZXJzLlRvQ29uY2VwdChDLmNsaW5pY2FsU3RhdHVzKSA9IENvbW1vbi4iYWN0aXZlIg0KICBvciBGSElSSGVscGVycy5Ub0NvbmNlcHQoQy5jbGluaWNhbFN0YXR1cykgPSBDb21tb24uInJlbGFwc2UiDQo="
  }, {
    "contentType": "application/elm+xml",
    "data": ""
  } ]
}