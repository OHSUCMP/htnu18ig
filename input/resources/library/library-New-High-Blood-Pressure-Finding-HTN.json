{
  "resourceType": "Library",
  "id": "library-New-High-Blood-Pressure-Finding-HTN",
  "extension": [ {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
    "valueReference": {
      "reference": "cqf-tooling"
    }
  } ],
  "url": "http://fhir.org/guides/ohsu/htnu18ig/Library/library-New-High-Blood-Pressure-Finding-HTN",
  "version": "0.1",
  "name": "NewHighBloodPressure",
  "title": "Library - OHSU Logic for identifying High Blood Pressure / Hypertension",
  "status": "active",
  "experimental": false,
  "type": {
    "coding": [ {
      "system": "http://hl7.org/fhir/library-type",
      "code": "logic-library",
      "display": "Logic Library"
    } ]
  },
  "date": "2020-04-15T00:00:00-08:00",
  "publisher": "Oregon Health and Science University (OHSU)",
  "description": "Identifies hypertension",
  "useContext": [ {
    "code": {
      "system": "http://hl7.org/fhir/usage-context-type",
      "code": "focus",
      "display": "Clinical Focus"
    },
    "valueCodeableConcept": {
      "coding": [ {
        "system": "http://snomed.info/sct",
        "code": "371622005",
        "display": "Elevated BP without HTN diagnosis"
      } ]
    }
  } ],
  "jurisdiction": [ {
    "coding": [ {
      "system": "urn:iso:std:iso:3166",
      "code": "US",
      "display": "United States of America"
    } ]
  } ],
  "purpose": "The purpose of this is to act as a 'hello world' sort of simple logic for testing end-to-end processing of the system.",
  "usage": "This is to be used in conjunction with a patient-facing FHIR application.",
  "copyright": "Â© OHSU 2020+.",
  "topic": [ {
    "text": "Hypertension Management"
  } ],
  "content": [
    {
      "contentType": "application/cql",
      "data": ""
    }
  ]
}