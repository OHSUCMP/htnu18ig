{
  "resourceType": "Library",
  "id": "library-NonPharmacologicIntervention",
  "extension": [ {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
    "valueReference": {
      "reference": "Device/cqf-tooling"
    }
  } ],
  "url": "http://fhir.org/guides/ohsuhypertensionig/Library/NonPharmacologicIntervention",
  "version": "0.1",
  "name": "NonPharmacologicIntervention",
  "title": "Non-medicinal Therapy Logic",
  "description": "Decision logic for providing tailored lifestyle recommendations based on patient behaviors.",
  "content": [ {
    "contentType": "text/cql",
    "data": ""
  } ]
}