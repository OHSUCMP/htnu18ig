{
  "resourceType": "Library",
  "id": "library-NonPharmacologicIntervention",
  "extension": [ {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
    "valueReference": {
      "reference": "cqf-tooling"
    }
  } ],
  "url": "http://fhir.org/guides/ohsu/htnu18ig/Library/NonPharmacologicIntervention",
  "version": "0.1",
  "name": "NonPharmacologicIntervention",
  "relatedArtifact": [ {
    "type": "depends-on",
    "display": "FHIR model information",
    "resource": "http://fhir.org/guides/cqf/common/Library/FHIR-ModelInfo|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library FHIRHelpers",
    "resource": "http://hl7.org/fhir/Library/FHIRHelpers|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library Common",
    "resource": "http://fhir.org/guides/ohsu/htnu18ig/Library/OHSUHTNCommon|0.1"
  }, {
    "type": "depends-on",
    "display": "Code system LOINC",
    "resource": "http://loinc.org"
  }, {
    "type": "depends-on",
    "display": "Code system Goal achievement status",
    "resource": "http://terminology.hl7.org/CodeSystem/goal-achievement"
  }, {
    "type": "depends-on",
    "display": "Code system ConditionVerificationStatusCodes",
    "resource": "http://terminology.hl7.org/CodeSystem/condition-ver-status"
  }, {
    "type": "depends-on",
    "display": "Code system ConditionCategorySystem",
    "resource": "http://terminology.hl7.org/CodeSystem/condition-category"
  }, {
    "type": "depends-on",
    "display": "Value set Tobacco Use Cessation Counseling",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.3.509"
  }, {
    "type": "depends-on",
    "display": "Value set Weight Reduction Recommendations",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1116.420"
  }, {
    "type": "depends-on",
    "display": "Value set BMI Follow Up Plan SNOMEDCT",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1195.111"
  }, {
    "type": "depends-on",
    "display": "Value set Alcohol Brief Intervention and Counseling",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1032.124"
  }, {
    "type": "depends-on",
    "display": "Value set Counseling for Nutrition",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.195.12.1003"
  }, {
    "type": "depends-on",
    "display": "Value set Physical Activity Recommendations",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1116.418"
  }, {
    "type": "depends-on",
    "display": "Value set Tobacco Smoking Status [Current] (Social History) (LOINC)",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1146.1330"
  }, {
    "type": "depends-on",
    "display": "Value set Tobacco User",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.2.422"
  }, {
    "type": "depends-on",
    "display": "Value set BMI Ratio",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.600.1.1490"
  }, {
    "type": "depends-on",
    "display": "Value set Average Number of Drinks per Drinking Day",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.106.11.1030"
  }, {
    "type": "depends-on",
    "display": "Value set Alcohol Abuse Disorder",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1222.24"
  }, {
    "type": "depends-on",
    "display": "Value set Hypertension",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.3157.4012"
  }, {
    "type": "depends-on",
    "display": "Value set Non essential Hypertension SNOMEDCT",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1032.10"
  }, {
    "type": "depends-on",
    "display": "Value set End Stage Renal Disease",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.2.590"
  }, {
    "type": "depends-on",
    "display": "Value set Pregnancy",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.3.378"
  }, {
    "type": "depends-on",
    "display": "Value set Systolic blood pressure",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1104.2"
  }, {
    "type": "depends-on",
    "display": "Value set Diastolic Blood Pressure",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.2.1045"
  }, {
    "type": "depends-on",
    "display": "Value set Blood Pressure Measured",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.600.2012"
  } ],
  "parameter": [ {
    "name": "Patient",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Patient"
  }, {
    "name": "Info",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Patient Name",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Meets Inclusion Criteria",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Condition Indicating Preexisting Hypertension",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "Conditions",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "Meets Exclusion Criteria",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient Under Age 18",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient Over Age 80",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Condition Indicating End Stage Renal Disease",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "Condition Indicating Pregnancy",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "HTN Crisis",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "BP Within 14 days",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Most Recent BP Reading",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Observation"
  }, {
    "name": "Blood Pressure Observations",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "In Population",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Goals",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Goal"
  }, {
    "name": "Tobacco Cessation Goals",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Goal"
  }, {
    "name": "Weight Loss Goals",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Goal"
  }, {
    "name": "Alcohol Goals",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Goal"
  }, {
    "name": "Physical Activity Goals",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Goal"
  }, {
    "name": "Nutrition Goals",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Goal"
  }, {
    "name": "Patient Has Behavioral Goals",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Enter Workflow",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient has a BP Goal",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Qualifying Blood Pressure Goals",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Goal"
  }, {
    "name": "BP Goal Met",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Has BP Set",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Above Goal Average Most Recent",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Average Most Recent BP Set",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Any"
  }, {
    "name": "Most Recent BP Set",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "BP from Most Recent Goal",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Any"
  }, {
    "name": "Most Recently Established Blood Pressure Goal",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Goal"
  }, {
    "name": "BP Highly Variable",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Tobacco Cessation Goals Needing Update",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Goal"
  }, {
    "name": "Smoking Status Observations",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Observations Indicating Patient is a Smoker",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Most Recent Observation of Patient Smoking Status",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Observation"
  }, {
    "name": "Patient is Currently a Smoker",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Procedures",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Procedure"
  }, {
    "name": "Last Smoking Counseling Procedure",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Procedure"
  }, {
    "name": "Smoking Recommendation",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Tobacco Goal Summary",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Smoking Rationale",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Smoking Suggestions",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Smoking Links",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Smoking Rationale Combined Data",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Smoking Indicator Status",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Weight Loss Goals Needing Update",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Goal"
  }, {
    "name": "Observations Specifying Patient BMI",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Most Recent Patient BMI",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Observation"
  }, {
    "name": "Patient BMI is Greater than 25 kg/m2",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Last BMI Counseling Procedure",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Procedure"
  }, {
    "name": "BMI Recommendation",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Weight Loss Goal Summary",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "BMI Rationale",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "BMI Suggestions",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "BMI Links",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "BMI Rationale Combined Data",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Weight Loss Indicator Status",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Alcohol Goals Needing Update",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Goal"
  }, {
    "name": "Observations Measuring Amount of Alcoholic Drinks Patient has per Drinking Day",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Most Recent Patient Drinking Observation",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Observation"
  }, {
    "name": "Heavy Daily Drinker",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "decimal"
  }, {
    "name": "Condition Indicating Alcohol Abuse Disorder",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "Patient is a Heavy Alcoholic Drinker",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Last Alcohol Counseling Procedure",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Procedure"
  }, {
    "name": "Alcohol Recommendation",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Alcohol Moderation Goal Summary",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Alcohol Rationale",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Alcohol Suggestions",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Alcohol Links",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Alcohol Rationale Combined Data",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Alcohol Moderation Indicator Status",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Nutrition Goals Needing Update",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Goal"
  }, {
    "name": "Last Nutrition Counseling Procedure",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Procedure"
  }, {
    "name": "Nutrition Recommendation",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Nutrition Goal Summary",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Nutrition Rationale",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Nutrition Suggestions",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Nutrition Links",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Nutrition Rationale Combined Data",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Nutrition Indicator Status",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Physical Activity Goals Needing Update",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Goal"
  }, {
    "name": "Last Physical Activity Counseling Procedure",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Procedure"
  }, {
    "name": "Physical Activity Recommendation",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Physical Activity Goal Summary",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Physical Activity Rationale",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Physical Activity Suggestions",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Physical Activity Links",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Physical Activity Rationale Combined Data",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Physical Activity Indicator Status",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Exclusion Reason",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Patient Smoking Goals Action Path",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient Weight Loss Goals Action Path",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient Alcohol Goals Action Path",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient Nutrition Goals Action Path",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient Physical Activity Goals Action Path",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "TEST Get Average All BP Last 2 Years",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Any"
  }, {
    "name": "Blood Pressure Observations for Last 2 Years",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "TEST Get Average Most Recent BP Set",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Any"
  } ],
  "dataRequirement": [ {
    "type": "Patient",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Patient" ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "category",
      "code": [ {
        "system": "http://terminology.hl7.org/CodeSystem/condition-category",
        "code": "problem-list-item",
        "display": "Problem List Item"
      } ]
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "category",
      "code": [ {
        "system": "http://terminology.hl7.org/CodeSystem/condition-category",
        "code": "encounter-diagnosis",
        "display": "Encounter Diagnosis"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.600.2012"
    } ]
  }, {
    "type": "Goal",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Goal" ]
  }, {
    "type": "Goal",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Goal" ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1146.1330"
    } ]
  }, {
    "type": "Procedure",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Procedure" ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.600.1.1490"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.106.11.1030"
    } ]
  } ],
  "content": [ {
    "contentType": "text/cql",
    "data": ""
  }, {
    "contentType": "application/elm+xml",
    "data": ""
  } ]
}