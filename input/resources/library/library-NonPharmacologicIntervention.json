{
  "resourceType": "Library",
  "id": "library-NonPharmacologicIntervention",
  "extension": [ {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
    "valueReference": {
      "reference": "cqf-tooling"
    }
  } ],
  "url": "http://fhir.org/guides/ohsu/htnu18ig/Library/NonPharmacologicIntervention",
  "version": "0.1",
  "name": "NonPharmacologicIntervention",
  "relatedArtifact": [ {
    "type": "depends-on",
    "resource": "http://hl7.org/fhir/Library/FHIR-ModelInfo|4.0.1"
  }, {
    "type": "depends-on",
    "resource": "http://hl7.org/fhir/Library/FHIRHelpers|4.0.1"
  }, {
    "type": "depends-on",
    "resource": "http://fhir.org/guides/ohsu/htnu18ig/Library/OHSUHTNCommon|0.1"
  }, {
    "type": "depends-on",
    "resource": "http://terminology.hl7.org/CodeSystem/v3-ActCode"
  }, {
    "type": "depends-on",
    "resource": "http://loinc.org"
  }, {
    "type": "depends-on",
    "resource": "http://terminology.hl7.org/CodeSystem/goal-achievement"
  }, {
    "type": "depends-on",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.3157.4012"
  }, {
    "type": "depends-on",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1032.10"
  }, {
    "type": "depends-on",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.600.2012"
  }, {
    "type": "depends-on",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1104.2"
  }, {
    "type": "depends-on",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.2.1045"
  }, {
    "type": "depends-on",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.3.509"
  }, {
    "type": "depends-on",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1116.420"
  }, {
    "type": "depends-on",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1195.111"
  }, {
    "type": "depends-on",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1032.124"
  }, {
    "type": "depends-on",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.195.12.1003"
  }, {
    "type": "depends-on",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1146.1330"
  }, {
    "type": "depends-on",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.2.422"
  }, {
    "type": "depends-on",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.600.1.1490"
  }, {
    "type": "depends-on",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.106.11.1030"
  }, {
    "type": "depends-on",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.3.378"
  }, {
    "type": "depends-on",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.2.590"
  } ],
  "parameter": [ {
    "name": "Patient",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Patient"
  }, {
    "name": "Info",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Warning",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Critical",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Errors",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Any"
  }, {
    "name": "Patient Name",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Condition Indicating Preexisting Hypertension",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "Meets Inclusion Criteria",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient Under Age 18",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient Over Age 80",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Condition Indicating End Stage Renal Disease",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "Condition Indicating Pregnancy",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "Meets Exclusion Criteria",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "In Population",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "BP Goal Recommendation",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "BP Goal Rationale",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Smoking Recommendation",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Smoking Rationale",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "BMI Recommendation",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "BMI Rationale",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Alcohol Recommendation",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Alcohol Rationale",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Dietary Counseling Recommendation",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Dietary Counseling Rationale",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Smoking, Drinking, BMI Not Increased Recommendation",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Smoking, Drinking, BMI Not Increased Rationale",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Qualifying Blood Pressure Goals",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Goal"
  }, {
    "name": "Most Recently Established Blood Pressure Goal",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Goal"
  }, {
    "name": "BP Goal Demonstrating Patient Improvement",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Goal"
  }, {
    "name": "Patient at BP Goal",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient on Track of Goal Recommendation",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Patient on Track of Goal Rationale",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Indicator Status",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Exclusion Reason",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Patient does not have a BP Goal",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Observations Indicating Patient is a Smoker",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Most Recent Observation of Patient Smoking Status",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Observation"
  }, {
    "name": "Patient is Currently a Smoker",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Observations Specifying Patient BMI",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Most Recent Patient BMI",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Observation"
  }, {
    "name": "Patient BMI is Greater than 25 kg/m2",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Observations Measuring Amount of Alcoholic Drinks Patient has per Drinking Day",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Most Recent Patient Drinking Observation",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Observation"
  }, {
    "name": "Heavy Daily Drinker",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "decimal"
  }, {
    "name": "Patient is a Heavy Alcoholic Drinker",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Counseling for Non-Pharmacological Interventions",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Procedure"
  }, {
    "name": "Counseling from Last Visit",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Reference"
  }, {
    "name": "Counseling Smoking Observation",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Observation"
  }, {
    "name": "Counseling Drinking Observation",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Observation"
  }, {
    "name": "Counseling BMI Observation",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Observation"
  }, {
    "name": "Patient Smoking Increased Since Last Visit",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient Drinking Increased Since Last Visit",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient BMI Increased Since Last Visit",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient Has Not Increased in Smoking, BMI, Or Drinking Since Last Counseling",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient is Currently a Smoker Action Path",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient BMI is Greater than 25 kg/m2 Action Path",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient is a Heavy Alcoholic Drinker Action Path",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient is in Need of Dietary Counseling Action Path",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient Reminder Recommendations Action Path",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "TEST Patient Age",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "integer"
  }, {
    "name": "TEST Patient BMI Resources",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "id"
  }, {
    "name": "TEST Most Recent Patient BMI",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Any"
  } ],
  "dataRequirement": [ {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.3157.4012"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1032.10"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.2.590"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.3.378"
    } ]
  }, {
    "type": "Goal",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Goal" ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1146.1330"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.600.1.1490"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.106.11.1030"
    } ]
  }, {
    "type": "Procedure",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Procedure" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.3.509"
    } ]
  }, {
    "type": "Procedure",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Procedure" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1116.420"
    } ]
  }, {
    "type": "Procedure",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Procedure" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1195.111"
    } ]
  }, {
    "type": "Procedure",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Procedure" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1032.124"
    } ]
  }, {
    "type": "Procedure",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Procedure" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.195.12.1003"
    } ]
  } ],
  "content": [ {
    "contentType": "text/cql",
    "data": ""
  }, {
    "contentType": "application/elm+xml",
    "data": ""
  } ]
}